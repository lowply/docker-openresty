user nginx;
worker_processes 4;

error_log	logs/error.log warn;
pid			/var/run/nginx.pid;

events {
	worker_connections 1024;
}

http {
	include	 mime.types;
	default_type	application/octet-stream;

	log_format	main	'$remote_addr - $remote_user [$time_local] "$request" '
					'$status $body_bytes_sent "$http_referer" '
					'"$http_user_agent" "$http_x_forwarded_for"';

	access_log logs/access.logmain;

	sendfile	on;
	#tcp_nopush	 on;

	#keepalive_timeout0;
	keepalive_timeout 65;

	#server {
	#	listen	 80		default_server;
	#	server_name_;
	#	location / {
	#		root		 html;
	#	}
	#}

	server {
		set $basepath "/usr/local/openresty/nginx/html";
		server_name _;
		root $basepath;
	
		access_log	"logs/server.${host}.access.log";
		error_log	"logs/server.${host}.error.log";
	
		location / {
			set $upstream "";
			rewrite_by_lua '
				local parser = require "redis.parser"
				local res = ngx.location.capture("/redis")
				local ipaddr, typ = parser.parse_reply(res.body)
				if typ ~= parser.BULK_REPLY or not ipaddr then
					ngx.log(ngx.ERR, "bad redis response: ", res.body)
					ngx.exit(500)
				end
				ngx.var.upstream = ipaddr
			';
			proxy_pass http://$upstream:3000;
		}

		location /redis {
			set $redis_key $host;
			redis2_query get $redis_key;
			redis2_pass redis:6379;
		}
	}
}

daemon off;

